apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus-service:9090",
                "version": 1
            }
        ]
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
data:
  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-websocket
data:
  websocket-dashboard.json: |
    {
      "id": null,
      "uid": "websocket-monitoring",
      "title": "WebSocket Server Monitoring",
      "tags": ["websocket", "monitoring"],
      "timezone": "browser",
      "panels": [
        {
          "id": 1,
          "title": "Active Connections",
          "type": "stat",
          "targets": [
            {
              "expr": "websocket_active_connections",
              "legendFormat": "Active Connections",
              "refId": "A"
            }
          ],
          "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0},
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 50},
                  {"color": "red", "value": 100}
                ]
              }
            }
          }
        },
        {
          "id": 2,
          "title": "Message Throughput",
          "type": "timeseries",
          "targets": [
            {
              "expr": "rate(websocket_messages_received_total[5m])",
              "legendFormat": "Messages Received/sec",
              "refId": "A"
            },
            {
              "expr": "rate(websocket_messages_sent_total[5m])",
              "legendFormat": "Messages Sent/sec",
              "refId": "B"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 6, "y": 0}
        },
        {
          "id": 3,
          "title": "Pod Count",
          "type": "timeseries",
          "targets": [
            {
              "expr": "count(up{job=\"websocket-server-static\"})",
              "legendFormat": "Pod Count",
              "refId": "A"
            }
          ],
          "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
        },
        {
          "id": 4,
          "title": "CPU Utilization",
          "type": "timeseries",
          "targets": [
            {
              "expr": "rate(process_cpu_seconds_total[5m]) * 100",
              "legendFormat": "CPU Usage % - {{instance}}",
              "refId": "A"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
          "fieldConfig": {
            "defaults": {
              "unit": "percent",
              "min": 0
            }
          }
        },
        {
          "id": 5,
          "title": "Memory Usage",
          "type": "timeseries",
          "targets": [
            {
              "expr": "process_resident_memory_bytes / 1024 / 1024",
              "legendFormat": "Resident Memory (MB) - {{instance}}",
              "refId": "A"
            },
            {
              "expr": "nodejs_heap_size_used_bytes / 1024 / 1024",
              "legendFormat": "Heap Used (MB) - {{instance}}",
              "refId": "B"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
          "fieldConfig": {
            "defaults": {
              "unit": "bytes",
              "min": 0
            }
          }
        },
        {
          "id": 6,
          "title": "Connection Rate",
          "type": "timeseries",
          "targets": [
            {
              "expr": "increase(websocket_active_connections[1m])",
              "legendFormat": "Connection Changes/min",
              "refId": "A"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16}
        },
        {
          "id": 8,
          "title": "Node.js Performance",
          "type": "timeseries",
          "targets": [
            {
              "expr": "nodejs_eventloop_lag_seconds * 1000",
              "legendFormat": "Event Loop Lag (ms) - {{instance}}",
              "refId": "A"
            },
            {
              "expr": "nodejs_active_handles_total",
              "legendFormat": "Active Handles - {{instance}}",
              "refId": "B"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16},
          "fieldConfig": {
            "defaults": {
              "unit": "short"
            }
          }
        },
        {
          "id": 7,
          "title": "Total Messages",
          "type": "stat",
          "targets": [
            {
              "expr": "websocket_messages_received_total",
              "legendFormat": "Total Received",
              "refId": "A"
            },
            {
              "expr": "websocket_messages_sent_total",
              "legendFormat": "Total Sent",
              "refId": "B"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 24},
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 100},
                  {"color": "red", "value": 1000}
                ]
              }
            }
          }
        },
        {
          "id": 9,
          "title": "Scaling Metrics",
          "type": "timeseries",
          "targets": [
            {
              "expr": "count(up{job=\"websocket-server-static\"})",
              "legendFormat": "Current Replicas",
              "refId": "A"
            },
            {
              "expr": "rate(process_cpu_seconds_total{job=\"websocket-server-static\"}[5m]) * 100",
              "legendFormat": "CPU Usage % - {{instance}}",
              "refId": "B"
            },
            {
              "expr": "websocket_active_connections",
              "legendFormat": "Active Connections",
              "refId": "C"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 24},
          "fieldConfig": {
            "defaults": {
              "unit": "short",
              "min": 0
            }
          }
        }
      ],
      "time": {"from": "now-1h", "to": "now"},
      "refresh": "5s",
      "schemaVersion": 30,
      "version": 1
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboard-websocket
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard-config
        configMap:
          name: grafana-dashboard-config
      - name: grafana-dashboard-websocket
        configMap:
          name: grafana-dashboard-websocket

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  labels:
    app: grafana
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
    name: grafana
  selector:
    app: grafana
